(function(a){var b=Math.sign,c=Math.min,d=Math.abs;"undefined"==typeof a.Lowlight&&(a.Lowlight={}),"object"==typeof module&&"object"==typeof module.exports&&(module.exports=a.Lowlight);class e{constructor(){this.nodes=new Map}id(a){return a}node(a,b=!1){return b?this.nodes.get(this.id(arguments[0])):this.nodes.get(a)}data(a,b){return 2===argument.length&&(a.graph.get(this)._data=b),a.graph.get(this)._data}adjacent(c,a){return c.graph.get(this).has(a)}neighbors(a){return Array.from(a.graph.get(this).keys())}connected(c,a){return c.graph.get(this)._connectivity===a.graph.get(this)._connectivity}connect(){let a=Array.from(this.nodes.values()),b=0;for(let b=0;b<a.length;b++)a[b].graph.get(this)._connectivity=void 0;for(let c=0;c<a.length;c++){if(void 0!==a[c].graph.get(this)._connectivity)continue;let d=[a[c]];for(b++;d.length;){let a=d.shift();a.graph.get(this)._connectivity=b,this.neighbors(a).map((a)=>{void 0===a.graph.get(this)._connectivity&&0>d.indexOf(a)&&d.push(a)})}}}add(a){return 1<arguments.length?Array.from(arguments).map((a)=>this.add(a)):(a.graph.set(this,new Map),this.nodes.set(a.id,a),a)}delete(a){return 1<arguments.length?Array.from(arguments).map((a)=>this.delete(a)):(a.graph.delete(this),this.nodes.delete(a.id),a)}edge(c,a,b=1,d=1){if(!c.graph.has(this)||!a.graph.has(this))throw new Error("Nodes must be on the same graph");return null===b?c.graph.get(this).delete(a):c.graph.get(this).set(a,b),null===d?a.graph.get(this).delete(c):a.graph.get(this).set(c,d),this}cost(c,a){return this.adjacent(c,a)?c.graph.get(this).get(a):null}}e.fromArray=function(a,b={}){let c=e.fromArray.X(a,b.order),d=e.fromArray.Y(a,b.order),g=e.fromArray.at.bind(null,a,b.order),h=[],j=null;for(let k,l=1;l<Math.max(2,arguments.length);l++){k=new e,h.push(k),b=arguments[l]||{};let a=e.fromArray.id.bind(null,c,d,b.torus),i=b.cost||e.fromArray.cost,n=e.fromArray.edge.bind(null,k,i);for(let b=0;b<c;b++)for(let c,e=0;e<d;e++)c=k.add(j?j.get(a(b,e)):new f(a(b,e))),c.x=b,c.y=e,c.graph.get(k)._data=g(b,e),n(c,k.nodes.get(a(b-1,e))),n(c,k.nodes.get(a(b+1,e))),n(c,k.nodes.get(a(b,e-1))),n(c,k.nodes.get(a(b,e+1)));if(b.diagonals)for(let e=0;e<c;e++)for(let c=0;c<d;c++){let d=k.nodes.get(a(e,c)),f=k.adjacent(d,k.nodes.get(a(e-1,c))),g=k.adjacent(d,k.nodes.get(a(e+1,c))),h=k.adjacent(d,k.nodes.get(a(e,c-1))),i=k.adjacent(d,k.nodes.get(a(e,c+1)));(f||h||b.cutting)&&n(d,k.nodes.get(a(e-1,c-1))),(f||i||b.cutting)&&n(d,k.nodes.get(a(e-1,c+1))),(g||h||b.cutting)&&n(d,k.nodes.get(a(e+1,c-1))),(g||i||b.cutting)&&n(d,k.nodes.get(a(e+1,c+1)))}Object.defineProperty(k,"id",{enumerable:!1,configurable:!1,writable:!0,value(b){return a(b.x,b.y)}}),k.connect(),k.X=c,k.Y=d,k.TORUS=b.torus,j||(j=k.nodes)}e.fromArray.update.bind(null,graph,edge);return 1<h.length?h:h[0]},e.fromArray.X=function(a,b="yx"){return"xy"===b?a.length:"yx"===b?a[0].length:0},e.fromArray.Y=function(a,b="yx"){return"xy"===b?a[0].length:"yx"===b?a.length:0},e.fromArray.at=function(a,b="yx",c,d){return"xy"===b?a[c][d]:a[d][c]},e.fromArray.id=function(a=0,b=0,c=!1,d,e){return c?(e+b)%b*a+(d+a)%a:0<=d&&d<a&&0<=e&&e<b?e*a+d:null},e.fromArray.cost=function(){return 1},e.fromArray.edge=function(c,d,e,a){a&&c.edge(e,a,d(c.data(e),c.data(a)),d(c.data(a),c.data(e)))},e.fromArray.update=function(){console.warn("Graph.fromArray isn't implemented yet")};class f{constructor(a,b){for(let c in this.id=a,this.graph=new Map,b)"id"!=c&&"graph"!=c&&(this[c]=b[c])}}class g{constructor(a){this.nodes=[],this.score="function"==typeof a?a:(b)=>{return+b}}get size(){return this.nodes.length}add(a){if(1<arguments.length){for(let a=0;a<arguments.length;a++)this.add(arguments[a]);return this}return this.nodes.push(a),this.bubble(this.size-1)}set(a){let b=this.nodes.indexOf(a);return~b?this.score(a)<=this.score(this.nodes[b])?this.bubble(this.nodes.indexOf(a)):this.sink(this.nodes.indexOf(a)):this.add(a)}pop(){let a=this.nodes[0],b=this.nodes.pop();return 0<this.size&&(this.nodes[0]=b,this.sink(0)),a}top(){return this.nodes[0]}delete(a){if(1<arguments.length){for(let a=0;a<arguments.length;a++)this.delete(arguments[a]);return this}for(let b=0;b<this.size;b++){if(this.nodes[b]!=a)continue;let c=this.nodes.pop();return b==this.size-1?this:(this.nodes[b]=c,this.bubble(b).sink(b))}}bubble(a){let b=this.nodes[a],c=this.score(b);for(;0<a;){let d=Math.floor((a+1)/2)-1,e=this.nodes[d];if(c>=this.score(e))break;this.nodes[d]=b,this.nodes[a]=e,a=d}return this}sink(a){let b=this.nodes[a],c=this.score(b);for(;;){let d=2*(a+1),e=d-1,f=null;if(e<this.size&&this.score(this.nodes[e])<c&&(f=e),d<this.size&&this.score(this.nodes[d])<(f?this.score(this.nodes[f]):c)&&(f=d),null===f)break;this.nodes[a]=this.nodes[f],this.nodes[f]=b,a=f}return this}}let h={manhattan:function(c,a,b={}){let e=d(a.x-c.x),f=d(a.y-c.y);return(b.multiplier||1)*(e+f)},manhattanTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)},diagonal:function(e,a,b={}){let f=d(a.x-e.x),g=d(a.y-e.y);return m*(f+g)+(dm-2*m)*c(f,g)},diagonalTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)+((b.diagonalMultiplier||1.4)-2*(b.multiplier||1))*c(f,g)},euclidian:function(c,a,b={}){let e=d(a.x-c.x),f=d(a.y-c.y);return(b.multiplier||1)*Math.sqrt(e*e+f*f)},euclidianTorus:function(e,a,b={}){let f=c(d(a.x-e.x),a.x+(b.x||0)-e.x,e.x+(b.x||0)-a.x),g=c(d(a.y-e.y),a.y+(b.y||0)-e.y,e.y+(b.y||0)-a.y);return(b.multiplier||1)*(f+g)+((b.diagonalMultiplier||1.4)-2*(b.multiplier||1))*c(f,g)}};class i extends Error{constructor(a){super(a),this.name="WorkerError"}}class j{constructor(a,b={}){if(this.graphs=[],this.heuristic=b.heuristic||"manhattan",this.heuristicOptions=b.heuristicOptions||{},Array.isArray(a)&&(this.heuristic=b.heuristic in h?b.heuristic:b.diagonals?b.torus?"diagonalTorus":"diagonal":b.torus?"manhattanTorus":"manhattan",this.heuristicOptions.x=e.fromArray.X(a,b.order),this.heuristicOptions.y=e.fromArray.Y(a,b.order),this.graphs=e.fromArray.apply(this,arguments),!Array.isArray(this.graphs)&&(this.graphs=[this.graphs])),b.thread&&("undefined"==typeof WorkerGlobalScope||!(self instanceof WorkerGlobalScope))){this.worker=null;try{this.worker=new Worker(b.thread)}catch(a){throw"file:"===window.location.protocol&&console.warn("WebWorkers in local files may not be supported by your browser."),new i(`${b.thread} couldn't be opened.`)}"cost"in b&&(b.cost=b.cost.toString()),this.worker.postMessage(["constructor",a,b]),this.path=(a,b,c={})=>{this._worker_path_callback=c.callback,delete c.callback,this.worker.postMessage(["path",a,b,c])},this.worker.onmessage=(a)=>{let b=JSON.parse(a.data);switch(b[0]){case"path":this._worker_path_callback(b[1]);}}}}path(a,b,c={}){if(c.jps)return this.jps(a,b,c);let d=new g((a)=>{return a.estimated}),e=new Map,f=this.graphs[c.layer||0];if(a=f.node(a,!0),b=f.node(b,!0),d.add({node:a,estimated:0}),e.set(a,{score:0,from:null}),!c.static||f.connected(a,b))for(;d.size;){let a=d.pop().node;if(a===b)break;f.neighbors(a).map((g)=>{let i=(e.has(a)?e.get(a).score:0)+f.cost(a,g);i<(e.has(g)?e.get(g).score:Infinity)&&(e.set(g,{score:i,from:a}),d.set({node:g,estimated:i+h[c.heuristic||this.heuristic](g,b,c.heuristicOptions||this.heuristicOptions)}))}),d.delete(a)}let i=[];if(e.has(b)){let a=b;for(i.push(b);null!==(a=e.get(a).from);)i.push(a);i=i.reverse()}return c.callback&&c.callback(i,e),i}}if(j.JPS=class{constructor(){}static access(c,d,a,b){return c.adjacent(d,b?c.node(a,!0):a)}static neighborhood(a,c,d,e){let f=[],g=d.get(e).from||null;if(null!==g){let h={x:b(e.x-g.x),y:b(e.y-g.y)};if(0!=h.x&&0!=h.y){let b=a(e,{x:e.x+h.x,y:e.y},!0),d=a(e,{x:e.x,y:e.y+h.y},!0);(b||d)&&(f.push(c.node({x:e.x+h.x,y:e.y+h.y},!0)),b&&(f.push(c.node({x:e.x+h.x,y:e.y},!0)),!a(e,{x:e.x,y:e.y-h.y},!0)&&f.push(c.node({x:e.x+h.x,y:e.y-h.y},!0))),d&&(f.push(c.node({x:e.x,y:e.y+h.y},!0)),!a(e,{x:e.x-h.x,y:e.y},!0)&&f.push(c.node({x:e.x-h.x,y:e.y+h.y},!0))))}else a(e,{x:e.x+h.x,y:e.y+h.y},!0)&&(f.push(c.node({x:e.x+h.x,y:e.y+h.y},!0)),0==h.x?0!=h.y&&(!a(e,{x:e.x-1,y:e.y},!0)&&f.push(c.node({x:e.x-1,y:e.y+h.y},!0)),!a(e,{x:e.x+1,y:e.y},!0)&&f.push(c.node({x:e.x+1,y:e.y+h.y},!0))):(!a(e,{x:e.x,y:e.y-1},!0)&&f.push(c.node({x:e.x+h.x,y:e.y-1},!0)),!a(e,{x:e.x,y:e.y+1},!0)&&f.push(c.node({x:e.x+h.x,y:e.y+1},!0))))}else return c.neighbors(e);return f.filter((a)=>a)}static jump(a,c,e,f,g,h){for(;;){if(!a(h,g))return null;if(g.x===f.x&&g.y===f.y)return g;let i={x:b(g.x-h.x),y:b(g.y-h.y)};if(0!=i.x&&0!=i.y){if(!a(g,{x:g.x-i.x,y:g.y},!0)&&a(g,{x:g.x-i.x,y:g.y+i.y},!0)||!a(g,{x:g.x,y:g.y-i.y},!0)&&a(g,{x:g.x+i.x,y:g.y-i.y},!0))return g;let b=j.JPS.jump.bind(this,a,c,e,f);if(null!==b(c.node({x:g.x+i.x,y:g.y},!0),g)||null!==b(c.node({x:g.x,y:g.y+i.y},!0),g))return g}else if(0!=i.x){if(!a(g,{x:g.x,y:g.y-1},!0)&&a(g,{x:g.x+i.x,y:g.y-1},!0)||!a(g,{x:g.x,y:g.y+1},!0)&&a(g,{x:g.x+i.x,y:g.y+1},!0))return g;}else if(0!=i.y&&(!a(g,{x:g.x-1,y:g.y},!0)&&a(g,{x:g.x-1,y:g.y+i.y},!0)||!a(g,{x:g.x+1,y:g.y},!0)&&a(g,{x:g.x+1,y:g.y+i.y},!0)))return g;h=g,g=c.node({x:g.x+i.x,y:g.y+i.y},!0)}return null}},j.prototype.jps=function(a,c,d={}){if(this.graphs[d.layer||0].TORUS)return console.warn("Torus map aren't yet supported by JPS"),d.callback&&d.callback([],new Map),[];let e=new g((a)=>{return a.estimated}),f=new Map,i=this.graphs[d.layer||0],k=null;a=i.node(a,!0),c=i.node(c,!0),e.add({node:a,estimated:0}),f.set(a,{score:0,from:null});let l=j.JPS.access.bind(this,i),n=j.JPS.neighborhood.bind(this,l,i,f),o=j.JPS.jump.bind(this,l,i,f,c);if(!d.static||i.connected(a,c))for(;e.size;){let a=e.pop().node;if(a===c)break;n(a).map((b)=>{if(null!==(k=o(b,a))){let b=(f.has(a)?f.get(a).score:0)+i.cost(a,k);b<(f.has(k)?f.get(k).score:Infinity)&&(f.set(k,{score:b,from:a,jumped:!0}),e.set({node:k,estimated:b+h[d.heuristic||this.heuristic](k,c,d.heuristicOptions||this.heuristicOptions)}))}}),e.delete(a)}let p=[];if(f.has(c)){let d=c;for(;d.x!=a.x||d.y!=a.y;)for(let a=f.get(d).from;d.x!=a.x||d.y!=a.y;)p.push(d),d=i.node({x:d.x+b(a.x-d.x),y:d.y+b(a.y-d.y)},!0);p.push(d),p.reverse()}return d.callback&&d.callback(p,f),p},"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope){let a;onmessage=function(b){let c=b.data;switch(c[0]){case"constructor":if("cost"in c[2]){let a=/^\((.*?)\)\s*=>\s*{/.test(c[2].cost),b=/^function /.test(c[2].cost);c[2].cost=eval(`(${a||b?"":"function "}${c[2].cost})`)}a=new j(c[1],c[2]);break;case"path":postMessage(JSON.stringify(["path",a.path(c[1],c[2],c[3])]));}}}a.Lowlight.Astar={Graph:e,Node:f,BinaryHeap:g,Heuristic:h,Configuration:j,WorkerError:i}})("undefined"==typeof window?this:window);
